<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="20368" started-at="2024-01-28T21:06:56 CST" finished-at="2024-01-28T21:07:17 CST">
    <groups>
    </groups>
    <test name="PetTest" duration-ms="20368" started-at="2024-01-28T21:06:56 CST" finished-at="2024-01-28T21:07:17 CST">
      <class name="api.test.PetTests2">
        <test-method status="PASS" signature="setUpData()[pri:0, instance:api.test.PetTests2@1a8a8f7c]" name="setUpData" is-config="true" duration-ms="2208" started-at="2024-01-28T21:06:58 CST" finished-at="2024-01-28T21:07:00 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpData -->
        <test-method status="PASS" signature="testPostPet()[pri:1, instance:api.test.PetTests2@1a8a8f7c]" name="testPostPet" duration-ms="11507" started-at="2024-01-28T21:07:00 CST" finished-at="2024-01-28T21:07:12 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostPet -->
        <test-method status="PASS" signature="testPostPet1()[pri:2, instance:api.test.PetTests2@1a8a8f7c]" name="testPostPet1" duration-ms="1261" started-at="2024-01-28T21:07:12 CST" finished-at="2024-01-28T21:07:14 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostPet1 -->
        <test-method status="PASS" signature="testPostPet2()[pri:3, instance:api.test.PetTests2@1a8a8f7c]" name="testPostPet2" duration-ms="488" started-at="2024-01-28T21:07:14 CST" finished-at="2024-01-28T21:07:14 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostPet2 -->
        <test-method status="FAIL" signature="testGetStoreByName()[pri:4, instance:api.test.PetTests2@1a8a8f7c]" name="testGetStoreByName" duration-ms="1199" started-at="2024-01-28T21:07:14 CST" finished-at="2024-01-28T21:07:15 CST">
          <exception class="org.xml.sax.SAXParseException">
            <message>
              <![CDATA[Content is not allowed in prolog.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.
at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1472)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:994)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:602)
at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:112)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:505)
at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:841)
at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:770)
at com.sun.org.apache.xerces.internal.jaxp.validation.StreamValidatorHelper.validate(StreamValidatorHelper.java:155)
at com.sun.org.apache.xerces.internal.jaxp.validation.ValidatorImpl.validate(ValidatorImpl.java:116)
at javax.xml.validation.Validator.validate(Validator.java:124)
at javax.xml.validation.Validator$validate.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.matcher.xml.XmlXsdMatcher.matches(XmlXsdMatcher.groovy:84)
at io.restassured.internal.assertion.BodyMatcher.validate(BodyMatcher.java:82)
at io.restassured.internal.assertion.BodyMatcherGroup.lambda$validate$0(BodyMatcherGroup.java:30)
at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)
at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
at io.restassured.internal.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.java:30)
at io.restassured.internal.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:157)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:499)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at api.test.PetTests2.testGetStoreByName(PetTests2.java:127)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.xml.sax.SAXParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStoreByName -->
        <test-method status="PASS" signature="testGetStoreByName1()[pri:5, instance:api.test.PetTests2@1a8a8f7c]" name="testGetStoreByName1" duration-ms="380" started-at="2024-01-28T21:07:15 CST" finished-at="2024-01-28T21:07:16 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStoreByName1 -->
        <test-method status="PASS" signature="testUpdateStoreByName()[pri:6, instance:api.test.PetTests2@1a8a8f7c]" name="testUpdateStoreByName" duration-ms="379" started-at="2024-01-28T21:07:16 CST" finished-at="2024-01-28T21:07:16 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateStoreByName -->
        <test-method status="PASS" signature="testDeleteStoreByName()[pri:7, instance:api.test.PetTests2@1a8a8f7c]" name="testDeleteStoreByName" duration-ms="403" started-at="2024-01-28T21:07:16 CST" finished-at="2024-01-28T21:07:17 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteStoreByName -->
      </class> <!-- api.test.PetTests2 -->
    </test> <!-- PetTest -->
  </suite> <!-- Suite -->
</testng-results>
